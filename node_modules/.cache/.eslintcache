[{"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\redux\\Store.js":"3","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\redux\\slices\\CartSlice.js":"4","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\Navbar.jsx":"5","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\pages\\Home.jsx":"6","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\pages\\Cart.jsx":"7","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\Product.jsx":"8","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\Spinner.jsx":"9","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\CartItem.jsx":"10"},{"size":459,"mtime":1748349444605,"results":"11","hashOfConfig":"12"},{"size":506,"mtime":1754906764491,"results":"13","hashOfConfig":"12"},{"size":192,"mtime":1748348920210,"results":"14","hashOfConfig":"12"},{"size":496,"mtime":1748525251696,"results":"15","hashOfConfig":"12"},{"size":1235,"mtime":1754906450192,"results":"16","hashOfConfig":"12"},{"size":1425,"mtime":1754906192951,"results":"17","hashOfConfig":"12"},{"size":1332,"mtime":1754906996729,"results":"18","hashOfConfig":"12"},{"size":2223,"mtime":1754906902868,"results":"19","hashOfConfig":"12"},{"size":204,"mtime":1748346090818,"results":"20","hashOfConfig":"12"},{"size":843,"mtime":1748527552849,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jb6qvt",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\index.js",[],[],"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\App.js",[],[],"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\redux\\Store.js",[],[],"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\redux\\slices\\CartSlice.js",[],[],"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\Navbar.jsx",["56"],[],"import {FaShoppingCart} from \"react-icons/fa\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  \r\n  const {cart} = useSelector((state) => state);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"flex justify-between items-center h-20 max-w-6xl mx-auto\">\r\n\r\n        <NavLink to=\"/\">\r\n          <div className=\"ml-5\">\r\n          <img src=\"../logo.png\" className=\"h-14\"/>\r\n          </div>\r\n        </NavLink>\r\n\r\n          <div className=\"flex items-center font-medium text-slate-100 mr-5 space-x-6\">\r\n            <NavLink to=\"/\">\r\n              <p>Home</p>\r\n            </NavLink>\r\n\r\n            <NavLink to=\"/cart\">\r\n              <div>\r\n                  <FaShoppingCart className=\"text-2xl\"/>\r\n                  {\r\n                    cart.length > 0 &&\r\n                    <span\r\n                    className=\"absolute -top-1 -right-2 bg-green-600 text-xs w-5 h-5 flex \r\n                    justify-center items-center animate-bounce rounded-full text-white\" \r\n                    >{cart.length}</span>\r\n                  }\r\n              </div>\r\n            </NavLink>\r\n            \r\n          </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\pages\\Home.jsx",[],[],"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\pages\\Cart.jsx",["57"],[],"import {useState, useEffect} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CartItem from \"../components/CartItem\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Cart = () => {\r\n\r\n  const {cart} = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  const [TotalAmount, setTotalAmount] = useState(0);\r\n  \r\n  useEffect(\r\n    () => {\r\n      setTotalAmount(cart.reduce((acc,curr) => acc+curr.price,0));\r\n    }, [cart])\r\n\r\n  return (\r\n  <div>\r\n    {\r\n      cart.length > 0 ?\r\n      (<div>\r\n        <div>\r\n          {\r\n            cart.map((post,index) => { \r\n            return <CartItem key={post.id} post={post} postIndex={index}/>}\r\n            )\r\n          }\r\n        </div>\r\n\r\n        <div>\r\n            <div>Your Cart</div>\r\n            <div>Summary</div>\r\n            <p>\r\n              <span>Total Items: ${cart.length}</span>\r\n            </p>\r\n        </div>\r\n\r\n        <div>\r\n          <p>Total Amount: ${TotalAmount}</p>\r\n          <button>\r\n            CheckOut Now\r\n          </button>\r\n        </div>\r\n\r\n\r\n      </div>) :\r\n\r\n      (<div>\r\n         <h1>Cart Empty</h1>\r\n      <Link to={\"/\"}>\r\n        <button>\r\n          Shop Now\r\n        </button>\r\n      </Link>\r\n      </div>)\r\n    } \r\n  </div>\r\n  );\r\n};\r\n  \r\n  export default Cart;\r\n  ","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\Product.jsx",["58","59"],[],"import { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {toast} from \"react-hot-toast\";\r\nimport {add ,remove} from \"../redux/slices/CartSlice\";\r\n\r\nconst Product = ({post}) => {\r\n\r\n    const {cart} = useSelector((state) => state);\r\n    const dispatch = useDispatch();\r\n    \r\n    const addToCart = () => {\r\n        dispatch(add(post));\r\n        toast.success(\"Item added to cart!\");\r\n    };\r\n\r\n    const removeFromCart = () => {\r\n        dispatch(remove(post.id));\r\n        toast.error(\"Item removed from cart\");\r\n    };\r\n\r\n    return(\r\n        <div className=\"flex flex-col items-center justify-between \r\n    hover:scale-110 transition duration-300 ease-in gap-3 p-4 mt-10 ml-5 rounded-xl outline\">\r\n            <div>\r\n                <p className=\"text-gray-700 font-semibold text-lg text-left truncate w-40 mt-1\">{post.title}</p>\r\n            </div>\r\n            <div>\r\n                <p className=\"w-40 text-gray-400 font-normal text-[10px] text-left\">{post.description.split(\" \").slice(0,10).join(\" \")+\"...\"}</p>\r\n            </div>\r\n            <div className=\"h-[180px]\">\r\n                <img src={post.image} className=\"h-full w-full \" />\r\n            </div>\r\n            <div className=\"flex justify-between gap-12 items-center w-full mt-5\">\r\n                <div>\r\n                    <p className=\"text-green-600 font-semibold\">â‚¹{post.price}</p>\r\n                </div>\r\n\r\n                {\r\n          cart.some((p) => p.id == post.id) ?\r\n          (<button\r\n          className=\"text-gray-700 border-2 border-gray-700 rounded-full font-semibold \r\n          text-[12px] p-1 px-3 uppercase \r\n          hover:bg-gray-700\r\n          hover:text-white transition duration-300 ease-in\"\r\n          onClick={removeFromCart}>\r\n            Remove Item\r\n          </button>) :\r\n          (<button\r\n          className=\"text-gray-700 border-2 border-gray-700 rounded-full font-semibold \r\n          text-[12px] p-1 px-3 uppercase \r\n          hover:bg-gray-700\r\n          hover:text-white transition duration-300 ease-in\"\r\n          onClick={addToCart}>\r\n            Add to Cart\r\n          </button>)\r\n        }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\Spinner.jsx",[],[],"C:\\Users\\user\\Desktop\\Shopping cart practice\\src\\components\\CartItem.jsx",["60"],[],"\r\nimport {FcDeleteDatabase} from \"react-icons/fc\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { remove } from \"../redux/slices/CartSlice\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst CartItem = ({post, postIndex}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCart = () => {\r\n    dispatch(remove(post.id));\r\n    toast.success(\"Item Removed\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n\r\n        <div>\r\n          <img src={post.image} />\r\n        </div>\r\n        <div>\r\n          <h1>{post.title}</h1>\r\n          <h1>{post.description}</h1>\r\n          <div>\r\n            <p>{post.price}</p>\r\n            <div\r\n            onClick={removeFromCart}>\r\n              <FcDeleteDatabase/>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n",{"ruleId":"61","severity":1,"message":"62","line":15,"column":11,"nodeType":"63","endLine":15,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":10,"column":9,"nodeType":"66","messageId":"67","endLine":10,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":31,"column":17,"nodeType":"63","endLine":31,"endColumn":68},{"ruleId":"68","severity":1,"message":"69","line":39,"column":33,"nodeType":"70","messageId":"71","endLine":39,"endColumn":35},{"ruleId":"61","severity":1,"message":"62","line":21,"column":11,"nodeType":"63","endLine":21,"endColumn":35},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]